plugins {
    id 'org.openjfx.javafxplugin' version '0.0.8'
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'org.openjfx.javafxplugin'

group 'ru.hse'

project.ext.lwjglVersion = "3.2.3"
project.ext.jomlVersion = "1.9.24"
project.ext.lwjglNatives = "natives-macos"
//project.ext.lwjglNatives = "natives-windows"

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

javafx {
    version = "11"
    modules = [ 'javafx.controls' ]
}

application {
//    mainClassName = 'ru.hse.gui.GUI'
    mainClassName = 'ru.hse.jogl.Main'
    applicationDefaultJvmArgs = ['-XstartOnFirstThread']
}

compileJava {
    options.encoding = 'UTF-8'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties System.properties
}

repositories {
    mavenCentral()
}

dependencies {
    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-assimp"
    implementation "org.lwjgl:lwjgl-glfw"
    implementation "org.lwjgl:lwjgl-openal"
    implementation "org.lwjgl:lwjgl-opengl"
    implementation "org.lwjgl:lwjgl-stb"
    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-assimp::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
    implementation "org.joml:joml:${jomlVersion}"
}

test {
    useJUnitPlatform()
    testLogging {
        events = ["started", "skipped", "failed", "passed"]
        showStandardStreams = true
    }
}

task printDependencies(type: DependencyReportTask) {}

task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'ru.hse.jogl.Main'
    }
    archiveClassifier = "all"
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}